name: Pure Cloud Deploy (No Docker)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-mcp-server:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install fastapi uvicorn openpyxl beautifulsoup4 python-docx requests
    
    - name: Validate server startup
      run: |
        echo "🔍 Testing MCP server startup..."
        timeout 30s python xmind_mcp_server.py &
        SERVER_PID=$!
        sleep 10
        
        # 测试健康检查端点
        if curl -f http://localhost:8080/health; then
          echo "✅ Server started successfully!"
          kill $SERVER_PID
        else
          echo "❌ Server failed to start"
          kill $SERVER_PID || true
          exit 1
        fi
    
    - name: Create service info
      run: |
        echo "🚀 XMind MCP Server Cloud Service Ready!" > service-info.txt
        echo "📡 Service URL: http://localhost:8080" >> service-info.txt
        echo "📚 API Docs: http://localhost:8080/docs" >> service-info.txt
        echo "🔍 Health Check: http://localhost:8080/health" >> service-info.txt
        echo "⏰ Deployed at: $(date)" >> service-info.txt
        echo "🎯 Repository: https://github.com/Master-Frank/XmindMcp" >> service-info.txt
    
    - name: Upload service artifacts
      uses: actions/upload-artifact@v3
      with:
        name: mcp-server-info
        path: service-info.txt
    
    - name: Test core functionality
      run: |
        echo "🧪 Testing core MCP functionality..."
        timeout 30s python xmind_mcp_server.py &
        SERVER_PID=$!
        sleep 5
        
        # 测试健康检查
        echo "Testing health endpoint..."
        curl -s http://localhost:8080/health | jq .
        
        # 测试API文档
        echo "Testing API docs..."
        curl -s http://localhost:8080/docs | grep -q "FastAPI" && echo "✅ API docs available" || echo "❌ API docs failed"
        
        kill $SERVER_PID || true
    
    - name: Generate deployment summary
      run: |
        echo "## 🎉 XMind MCP Server Cloud Deployment Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 Quick Start Options:" >> $GITHUB_STEP_SUMMARY
        echo "- **GitHub Codespaces**: [Create Cloud IDE](https://github.com/codespaces/new?hide_repo_select=true&ref=main&repo=Master-Frank/XmindMcp)" >> $GITHUB_STEP_SUMMARY
        echo "- **Local Development**: Clone repo and run \`python xmind_mcp_server.py\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Docker**: Use pre-built image (see docker-quick-start.sh)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📡 Service Endpoints:" >> $GITHUB_STEP_SUMMARY
        echo "- Health Check: \`http://localhost:8080/health\`" >> $GITHUB_STEP_SUMMARY
        echo "- API Documentation: \`http://localhost:8080/docs\`" >> $GITHUB_STEP_SUMMARY
        echo "- MCP Interface: \`http://localhost:8080/mcp\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🎯 Features Available:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ XMind file reading and processing" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Multiple format conversion (Excel, Word, Markdown, HTML)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Mind map structure validation" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ AI-powered content enhancement" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ FastAPI-based REST API" >> $GITHUB_STEP_SUMMARY

  # 可选：部署到云服务平台（如Render.com）
  deploy-to-cloud:
    runs-on: ubuntu-latest
    needs: deploy-mcp-server
    if: github.ref == 'refs/heads/main' && false  # 默认禁用，需要时启用
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render (Optional)
      if: false  # 需要配置RENDER_API_KEY密钥
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        echo "🚀 Deploying to Render.com..."
        # 这里可以添加Render部署脚本
        echo "Deployment completed!"